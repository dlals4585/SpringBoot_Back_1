buildscript {
    ext {
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}


plugins {
    id 'org.springframework.boot' version '2.7.2'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    id 'java'
    id 'eclipse'
}

group 'com.trip'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    //test code lib
    testImplementation 'junit:junit:4.13.1'

    //spring boot lib
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //json lib
    implementation group: 'org.json', name: 'json', version: '20210307'

    //lombok lib
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok'

    //database setting
    //implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'
    //implementation 'mysql:mysql-connector-java'

    //spring data jpa
    implementation ('org.springframework.boot:spring-boot-starter-data-jpa')
    runtimeOnly 'com.h2database:h2:1.4.197'

    //머스태치(Mustache)
    implementation('org.springframework.boot:spring-boot-starter-mustache')

    //스프링 시큐리티(막강한 인증과 인가 기능을 가진 프레임워크(스프링 보안 표준))
    implementation('org.springframework.boot:spring-boot-starter-oauth2-client')
    testImplementation('org.springframework.security:spring-security-test')
    //spring-session-jdbc 등록(데이터베이스를 세션 저장소로 사용)
    implementation('org.springframework.session:spring-session-jdbc')

}

test {
    useJUnitPlatform()
}